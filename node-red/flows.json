[
    {
        "id": "adb25c974a653c26",
        "type": "tab",
        "label": "FTX",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0b9ec44e8ca49f0e",
        "type": "tab",
        "label": "FTX MQTT Autodiscovery",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b31f8b0f1228b516",
        "type": "modbus-client",
        "name": "modbus in",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttySC0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "57600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "10000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "26516bc9a19c6fd2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${MQTT_Server}",
        "port": "${MQTT_Server_Port}",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "971ffb77671fd508",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "read FTX",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 480,
        "wires": []
    },
    {
        "id": "535931066cd2c2a3",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "038e5d4103798191"
            ]
        ]
    },
    {
        "id": "56a7e8e31c3fe721",
        "type": "modbus-read",
        "z": "adb25c974a653c26",
        "name": "16 bit integer register R",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "33",
        "rate": "20",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b31f8b0f1228b516",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 260,
        "wires": [
            [],
            [
                "04b010536f543ba1",
                "8bd3e2a4a8137135"
            ]
        ]
    },
    {
        "id": "be481f842268d89d",
        "type": "modbus-read",
        "z": "adb25c974a653c26",
        "name": "Discrete Output (1bit) R/W",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "6",
        "rate": "20",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b31f8b0f1228b516",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 380,
        "wires": [
            [],
            [
                "f1c16fd06103ccc5",
                "5a35cb3b7a29bb3c",
                "520ea1413f98b685",
                "45980ed76d5023ce"
            ]
        ]
    },
    {
        "id": "b728c44181278c17",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1240,
        "wires": [
            [
                "038e5d4103798191"
            ]
        ]
    },
    {
        "id": "038e5d4103798191",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Boost",
        "showStatusActivities": true,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "546a255928a5103f",
                "a38e570a317a5012"
            ],
            [
                "546a255928a5103f"
            ]
        ]
    },
    {
        "id": "45d8f74a550c4ef3",
        "type": "http in",
        "z": "adb25c974a653c26",
        "name": "Read FTX",
        "url": "/ftxdata",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "c904870ad48c7cd7"
            ]
        ]
    },
    {
        "id": "6294e1c1ab2643a7",
        "type": "http response",
        "z": "adb25c974a653c26",
        "name": "",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "c904870ad48c7cd7",
        "type": "change",
        "z": "adb25c974a653c26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ftxdata",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 120,
        "wires": [
            [
                "6294e1c1ab2643a7"
            ]
        ]
    },
    {
        "id": "4020311a95872668",
        "type": "change",
        "z": "adb25c974a653c26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ftxdata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "61fcfac1abd8b63b",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/data",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1140,
        "y": 380,
        "wires": []
    },
    {
        "id": "3cb2363ce65cac88",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Parse modbus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"Outdoor temperature\":  {{ payload.data.1 }},\n    \"Supply air temperature\": {{ payload.data.2 }},\n    \"Exhaust air temperature\": {{ payload.data.3 }},\n    \"Waste air temperature\": {{ payload.data.4 }},\n    \"Water temperature\": {{ payload.data.5 }},\n    \"Heat Recovery Wheel temperature\": {{ payload.data.6 }},\n    \"Room temperature\": {{ payload.data.7 }},\n    \"Supply pressure x0.1Pa Valid only if pressure sensor connected.\": {{ payload.data.11 }},\n    \"Exhaust pressure x0.1Pa Valid only if pressure sensor connected.\": {{ payload.data.12 }},\n    \"Relative humidity x0.1% Valid only if RH sensor connected.\": {{ payload.data.13 }},\n    \"Carbon dioxide PPM Valid only if CO2 sensor conneced.\": {{ payload.data.14 }},\n    \"Filter days left Number of days to filter change.\": {{ payload.data.19 }},\n    \"Current weektimer program\": {{ payload.data.20 }},\n    \"Current fan speed\": {{ payload.data.21 }},\n    \"Current supply fan step\": {{ payload.data.22 }},\n    \"Current exhaust fan step\": {{ payload.data.23 }},\n    \"Current supply fan power %\": {{ payload.data.24 }},\n    \"Current exhaust fan power %\": {{ payload.data.25 }},\n    \"Current supply fan speed RPM\": {{ payload.data.26 }},\n    \"Current exhaust fan speed RPM\": {{ payload.data.27 }},\n    \"Current heating power\": {{ payload.data.28 }},\n    \"Current heat/cold recovery power\": {{ payload.data.29 }},\n    \"Current cooling power\": {{ payload.data.30 }},\n    \"Supply fan control voltage\": {{ payload.data.31 }},\n    \"Exhaust fan control voltage\": {{ payload.data.32 }},\n    \"outdoor\": {{ payload.data.1 }}\n }",
        "output": "json",
        "x": 620,
        "y": 300,
        "wires": [
            [
                "1bd2e8d3f920dc95"
            ]
        ]
    },
    {
        "id": "d80f4f1d96401719",
        "type": "change",
        "z": "adb25c974a653c26",
        "name": "Scale temerature",
        "rules": [
            {
                "t": "set",
                "p": "payload.data[1]",
                "pt": "msg",
                "to": "payload.data[1]/10",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.data[2]",
                "pt": "msg",
                "to": "payload.data[2]/10",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.data[3]",
                "pt": "msg",
                "to": "payload.data[3]/10",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.data[4]",
                "pt": "msg",
                "to": "payload.data[4]/10",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.data[5]",
                "pt": "msg",
                "to": "payload.data[5]/10",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.data[6]",
                "pt": "msg",
                "to": "payload.data[6]/10",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.data[7]",
                "pt": "msg",
                "to": "payload.data[7]/10",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "d8f93bdedf7b0a2b"
            ]
        ]
    },
    {
        "id": "f1c16fd06103ccc5",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Parse modbus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"Unit on\": {{ payload.data.0 }},\n    \"Overpressure mode\": {{ payload.data.1 }},\n    \"Boost mode\": {{ payload.data.2 }},\n    \"Away mode\": {{ payload.data.3 }},\n    \"Clear Alarms\": {{ payload.data.4 }},\n    \"Reset filter timer\": {{ payload.data.5 }}\n}",
        "output": "json",
        "x": 620,
        "y": 380,
        "wires": [
            [
                "1bd2e8d3f920dc95"
            ]
        ]
    },
    {
        "id": "1bd2e8d3f920dc95",
        "type": "join",
        "z": "adb25c974a653c26",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "35",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "4020311a95872668",
                "96d2cf840c63a040"
            ]
        ]
    },
    {
        "id": "8ee4b31779dffefc",
        "type": "modbus-read",
        "z": "adb25c974a653c26",
        "name": "Red Holding register",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "28",
        "rate": "20",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b31f8b0f1228b516",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 150,
        "y": 480,
        "wires": [
            [],
            [
                "4217c798d847d80c",
                "fdb8603a1b1a61fb",
                "79af09a9cf3c9c4f"
            ]
        ]
    },
    {
        "id": "d96300f8a639681b",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Summer cooling",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a2d7aa7505d1c889",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Summer cooling on",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "15",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "b146c7e55bda88e4"
            ],
            [
                "d96300f8a639681b"
            ]
        ]
    },
    {
        "id": "546a255928a5103f",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Boost",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1320,
        "wires": []
    },
    {
        "id": "acbbdd1cec7113df",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "On",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "255",
        "payloadType": "num",
        "x": 90,
        "y": 1000,
        "wires": [
            [
                "a2d7aa7505d1c889"
            ]
        ]
    },
    {
        "id": "5921b62b904a7442",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 1040,
        "wires": [
            [
                "a2d7aa7505d1c889"
            ]
        ]
    },
    {
        "id": "c539ba15dc9617cd",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Read data to MQTT",
        "info": "",
        "x": 130,
        "y": 180,
        "wires": []
    },
    {
        "id": "c4bd8c4ea0354e24",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Set SNC",
        "info": "",
        "x": 100,
        "y": 940,
        "wires": []
    },
    {
        "id": "4217c798d847d80c",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Parse modbus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"User fan speed\": {{ payload.data.0 }},\n    \"Temperature setpoint\": {{ payload.data.1 }},\n    \"Supply fan speed EC\": {{ payload.data.2 }},\n    \"Exhaust fan speed EC\": {{ payload.data.3 }},\n    \"Min exhaust fan speed EC\": {{ payload.data.4 }},\n    \"Mod exhaust fan speed EC\": {{ payload.data.5 }},\n    \"Max exhaust fan speed EC\": {{ payload.data.6 }},\n    \"Min supply temperature\": {{ payload.data.9 }},\n    \"Max supply temperature\": {{ payload.data.10 }},\n    \"Regulation mode\": {{ payload.data.11 }},\n    \"SNC indoor-outdoor diff. Limit\": {{ payload.data.12 }},\n    \"SNC exhaust low limit\": {{ payload.data.13 }},\n    \"SNC exhaust high limit\": {{ payload.data.14 }},\n    \"SNC enable\": {{ payload.data.15 }},\n    \"Freeze protection limit\": {{ payload.data.16 }},\n    \"CO2 limit\": {{ payload.data.19 }},\n    \"CO2 interval\": {{ payload.data.20 }},\n    \"CO2 ramp\": {{ payload.data.21 }},\n    \"RH limit\": {{ payload.data.22 }},\n    \"RH interval\": {{ payload.data.23 }},\n    \"RH ramp\": {{ payload.data.24 }},\n    \"Boost speed\": {{ payload.data.25 }},\n    \"Boost duration\": {{ payload.data.26 }},\n    \"Overpressure duration\": {{ payload.data.27 }}\n}",
        "output": "json",
        "x": 620,
        "y": 480,
        "wires": [
            [
                "1bd2e8d3f920dc95"
            ]
        ]
    },
    {
        "id": "fe033b5deee540f6",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Set boost",
        "info": "",
        "x": 100,
        "y": 1140,
        "wires": []
    },
    {
        "id": "581b349babcfb637",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Endpoint data",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "6e4b88c55c1c15b1",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 1480,
        "wires": [
            [
                "314236b4042da727"
            ]
        ]
    },
    {
        "id": "f0613dfa99fe6222",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1440,
        "wires": [
            [
                "314236b4042da727"
            ]
        ]
    },
    {
        "id": "314236b4042da727",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Overpressure ",
        "showStatusActivities": true,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 400,
        "y": 1440,
        "wires": [
            [
                "c8a75741313dcd92",
                "cfabad084be98803"
            ],
            [
                "c8a75741313dcd92"
            ]
        ]
    },
    {
        "id": "c8a75741313dcd92",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Overpressure ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1520,
        "wires": []
    },
    {
        "id": "cae9ce57935595c6",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Set Overpressure ",
        "info": "",
        "x": 120,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d4b718f87de66487",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 1740,
        "wires": [
            [
                "3948a08cfcfaa06f"
            ]
        ]
    },
    {
        "id": "45847269be0d9f5f",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1700,
        "wires": [
            [
                "3948a08cfcfaa06f"
            ]
        ]
    },
    {
        "id": "3948a08cfcfaa06f",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Away",
        "showStatusActivities": true,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 410,
        "y": 1700,
        "wires": [
            [
                "5b984d487ffcd0c9",
                "a4026f1c9705ba13"
            ],
            [
                "5b984d487ffcd0c9"
            ]
        ]
    },
    {
        "id": "5b984d487ffcd0c9",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Away",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d2e9cc43111e4265",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Set Away",
        "info": "",
        "x": 100,
        "y": 1640,
        "wires": []
    },
    {
        "id": "bbda0c54de1cc764",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "240",
        "payloadType": "num",
        "x": 90,
        "y": 1200,
        "wires": [
            [
                "a5607e3a4c95c0d3"
            ]
        ]
    },
    {
        "id": "a5607e3a4c95c0d3",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Boost timer",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "26",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 410,
        "y": 1220,
        "wires": [
            [],
            [
                "546a255928a5103f"
            ]
        ]
    },
    {
        "id": "4488a7da61f7ce5d",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 90,
        "y": 1520,
        "wires": [
            [
                "6cd361d14c21be4c"
            ]
        ]
    },
    {
        "id": "6cd361d14c21be4c",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Overpressure timer",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "27",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 410,
        "y": 1480,
        "wires": [
            [],
            [
                "c8a75741313dcd92"
            ]
        ]
    },
    {
        "id": "97aa81b79ec71517",
        "type": "mqtt in",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/SNC/set",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 1080,
        "wires": [
            [
                "a2d7aa7505d1c889"
            ]
        ]
    },
    {
        "id": "e0d9c35ee6ba571f",
        "type": "function",
        "z": "adb25c974a653c26",
        "name": "true/false",
        "func": "const enable = Boolean(msg.payload.sncenable);\nconst value = enable ? 255 : 0;\nreturn {\n    payload: value\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1080,
        "wires": [
            [
                "a2d7aa7505d1c889"
            ]
        ]
    },
    {
        "id": "4fa6ed5015fc7520",
        "type": "mqtt in",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Boostmode/set",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1320,
        "wires": [
            [
                "f4f4b64f0793e0cb"
            ]
        ]
    },
    {
        "id": "f4f4b64f0793e0cb",
        "type": "function",
        "z": "adb25c974a653c26",
        "name": "true/false",
        "func": "const enable = msg.payload.toLowerCase() === \"true\";\nreturn {\n    payload: enable\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1320,
        "wires": [
            [
                "038e5d4103798191"
            ]
        ]
    },
    {
        "id": "ada5506a295a18ad",
        "type": "mqtt in",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Overpressuremode/set",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1560,
        "wires": [
            [
                "b223c85d8b44950b",
                "c8a75741313dcd92"
            ]
        ]
    },
    {
        "id": "b223c85d8b44950b",
        "type": "function",
        "z": "adb25c974a653c26",
        "name": "true/false",
        "func": "const enable = msg.payload.toLowerCase() === \"true\";\nreturn {\n    payload: enable\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1560,
        "wires": [
            [
                "314236b4042da727"
            ]
        ]
    },
    {
        "id": "1e68eb3afc2c8608",
        "type": "mqtt in",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Awaymode/set",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 1780,
        "wires": [
            [
                "878d71ab838493ed"
            ]
        ]
    },
    {
        "id": "878d71ab838493ed",
        "type": "function",
        "z": "adb25c974a653c26",
        "name": "true/false",
        "func": "const enable = msg.payload.toLowerCase() === \"true\";\nreturn {\n    payload: enable\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1780,
        "wires": [
            [
                "3948a08cfcfaa06f"
            ]
        ]
    },
    {
        "id": "d0055222e1218ffd",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Temperature",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2020,
        "wires": []
    },
    {
        "id": "b053465891b23332",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Set temperature",
        "info": "",
        "x": 120,
        "y": 1880,
        "wires": []
    },
    {
        "id": "b19862653c9bc4f4",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "Manual temp 21",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 120,
        "y": 2000,
        "wires": [
            [
                "677b1a0b2a635dfa"
            ]
        ]
    },
    {
        "id": "677b1a0b2a635dfa",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Temperature setpoint",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 460,
        "y": 1940,
        "wires": [
            [
                "d1514450ad5bd0bf"
            ],
            [
                "d0055222e1218ffd"
            ]
        ]
    },
    {
        "id": "fdb8603a1b1a61fb",
        "type": "change",
        "z": "adb25c974a653c26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 580,
        "wires": [
            [
                "c3f2aee7116058fb"
            ]
        ]
    },
    {
        "id": "c3f2aee7116058fb",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "DateTimeObject",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"Timestamp\": \"{{ payload }}\"\n}",
        "output": "json",
        "x": 620,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "96d2cf840c63a040",
        "type": "rbe",
        "z": "adb25c974a653c26",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 380,
        "wires": [
            [
                "61fcfac1abd8b63b",
                "971ffb77671fd508"
            ]
        ]
    },
    {
        "id": "d17724917bf1d85f",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Electric heater",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 2240,
        "wires": []
    },
    {
        "id": "a609070c6280c8e3",
        "type": "modbus-write",
        "z": "adb25c974a653c26",
        "name": "Electric heater",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "50",
        "quantity": "1",
        "server": "b31f8b0f1228b516",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 420,
        "y": 2180,
        "wires": [
            [
                "94e1d06b2af9b026"
            ],
            [
                "d17724917bf1d85f"
            ]
        ]
    },
    {
        "id": "545ffdd08ae821ee",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "On",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "255",
        "payloadType": "num",
        "x": 90,
        "y": 2180,
        "wires": [
            [
                "a609070c6280c8e3"
            ]
        ]
    },
    {
        "id": "b40b4fc8d619a57b",
        "type": "inject",
        "z": "adb25c974a653c26",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 2220,
        "wires": [
            [
                "a609070c6280c8e3"
            ]
        ]
    },
    {
        "id": "4ee93f8bdfa99beb",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Set Electric heater",
        "info": "",
        "x": 130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "b6949606bb978a22",
        "type": "mqtt in",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Electricheater/set",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 2260,
        "wires": [
            [
                "a609070c6280c8e3"
            ]
        ]
    },
    {
        "id": "4924455a6f679758",
        "type": "modbus-read",
        "z": "adb25c974a653c26",
        "name": "Discrete Input (1bit) Read only",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "0",
        "quantity": "33",
        "rate": "20",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b31f8b0f1228b516",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 680,
        "wires": [
            [
                "ba10b7476b222e28"
            ],
            []
        ]
    },
    {
        "id": "ba10b7476b222e28",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "alarm registers",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 680,
        "wires": []
    },
    {
        "id": "a38e570a317a5012",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Boostmode/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1140,
        "y": 1240,
        "wires": []
    },
    {
        "id": "94e1d06b2af9b026",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Electricheater/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1140,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a4026f1c9705ba13",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Awaymode/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1130,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cfabad084be98803",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Overpressuremode/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1160,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b146c7e55bda88e4",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/SNC/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1110,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5a35cb3b7a29bb3c",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Overpressure mode",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{ payload.data.1 }}\n}",
        "output": "json",
        "x": 520,
        "y": 800,
        "wires": [
            [
                "2bb882bc0f5076cc"
            ]
        ]
    },
    {
        "id": "2bb882bc0f5076cc",
        "type": "rbe",
        "z": "adb25c974a653c26",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 800,
        "wires": [
            [
                "cfabad084be98803"
            ]
        ]
    },
    {
        "id": "520ea1413f98b685",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Boost mode",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{ payload.data.2 }}\n}",
        "output": "json",
        "x": 490,
        "y": 840,
        "wires": [
            [
                "72e4898e72cec9a1"
            ]
        ]
    },
    {
        "id": "72e4898e72cec9a1",
        "type": "rbe",
        "z": "adb25c974a653c26",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 840,
        "wires": [
            [
                "a38e570a317a5012"
            ]
        ]
    },
    {
        "id": "45980ed76d5023ce",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Away mode",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{ payload.data.3 }}\n}",
        "output": "json",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "b4d9f3e23bf957f2"
            ]
        ]
    },
    {
        "id": "b4d9f3e23bf957f2",
        "type": "rbe",
        "z": "adb25c974a653c26",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 880,
        "wires": [
            [
                "a4026f1c9705ba13"
            ]
        ]
    },
    {
        "id": "9713ce2f426a5ef8",
        "type": "comment",
        "z": "adb25c974a653c26",
        "name": "Update MQTT from FTX side",
        "info": "",
        "x": 540,
        "y": 760,
        "wires": []
    },
    {
        "id": "d8f93bdedf7b0a2b",
        "type": "range",
        "z": "adb25c974a653c26",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload.data[28]",
        "name": "Scale heat power",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "3cb2363ce65cac88"
            ]
        ]
    },
    {
        "id": "091db26ac7331316",
        "type": "mqtt in",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Temperaturesetpoint/set",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1940,
        "wires": [
            [
                "d0055222e1218ffd",
                "677b1a0b2a635dfa"
            ]
        ]
    },
    {
        "id": "d1514450ad5bd0bf",
        "type": "mqtt out",
        "z": "adb25c974a653c26",
        "name": "",
        "topic": "ftx/Temperaturesetpoint/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1160,
        "y": 1940,
        "wires": []
    },
    {
        "id": "79af09a9cf3c9c4f",
        "type": "template",
        "z": "adb25c974a653c26",
        "name": "Temperature setpoint",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{ payload.data.1 }}\n}",
        "output": "json",
        "x": 520,
        "y": 920,
        "wires": [
            [
                "a209afef58fd599f"
            ]
        ]
    },
    {
        "id": "a209afef58fd599f",
        "type": "rbe",
        "z": "adb25c974a653c26",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 920,
        "wires": [
            [
                "d1514450ad5bd0bf"
            ]
        ]
    },
    {
        "id": "8bd3e2a4a8137135",
        "type": "function",
        "z": "adb25c974a653c26",
        "name": "Convert to signed integer",
        "func": "for (let i = 0; i < msg.payload.data.length; i++) {\n    let value = msg.payload.data[i];\n    if (value > 32767) {\n        msg.payload.data[i] = value - 65534;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "d80f4f1d96401719"
            ]
        ]
    },
    {
        "id": "04b010536f543ba1",
        "type": "debug",
        "z": "adb25c974a653c26",
        "name": "Modbus input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 140,
        "wires": []
    },
    {
        "id": "b20115cd90061d1c",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Outdoor temperature",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"device_class\": \"temperature\",\n    \"state_class\": \"measurement\",\n    \"name\": \"Outdoor temperature\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"°C\",\n    \"unique_id\": \"Outdoor temperature\",\n    \"value_template\": \" {{value_json['Outdoor temperature']}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:home-thermometer-outline\"\n}",
        "output": "json",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "99d3198b15f121b0"
            ]
        ]
    },
    {
        "id": "df1b9a9f94fdf8f3",
        "type": "comment",
        "z": "0b9ec44e8ca49f0e",
        "name": "Sensors temperature",
        "info": "",
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "99d3198b15f121b0",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/Outdoortemperature/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "ed1f197ca64d4cbe",
        "type": "mqtt in",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/status",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "26516bc9a19c6fd2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "71211143a9609d72"
            ]
        ]
    },
    {
        "id": "ab231bc9acedace7",
        "type": "inject",
        "z": "0b9ec44e8ca49f0e",
        "name": "Trigger sensor update",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "online",
        "payloadType": "str",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "71211143a9609d72"
            ]
        ]
    },
    {
        "id": "66c4ee64886f8f71",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Supply air temperature",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"device_class\": \"temperature\",\n    \"state_class\": \"measurement\",\n    \"name\": \"Supply air temperature\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"°C\",\n    \"unique_id\": \"Supply air temperature\",\n    \"value_template\": \"{{ value_json['Supply air temperature'] }}\"\n}",
        "output": "json",
        "x": 580,
        "y": 240,
        "wires": [
            [
                "774efbfc64510e05"
            ]
        ]
    },
    {
        "id": "774efbfc64510e05",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/Supplyairtemperature/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 940,
        "y": 240,
        "wires": []
    },
    {
        "id": "9d6e1c6cb385948f",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Exhaust air temperature",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"device_class\": \"temperature\",\n    \"state_class\": \"measurement\",\n    \"name\": \"Exhaust air temperature\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"°C\",\n    \"unique_id\": \"Exhaust air temperature\",\n    \"value_template\": \" {{value_json['Exhaust air temperature']}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:home-thermometer\"\n}",
        "output": "json",
        "x": 590,
        "y": 320,
        "wires": [
            [
                "90dd31e36dcbbd91"
            ]
        ]
    },
    {
        "id": "90dd31e36dcbbd91",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/Exhaustairtemperature/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9c302e663f32714",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Waste air temperature",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"device_class\": \"temperature\",\n    \"state_class\": \"measurement\",\n    \"name\": \"Waste air temperature\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"°C\",\n    \"unique_id\": \"Waste air temperature\",\n    \"value_template\": \" {{value_json['Waste air temperature']}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:home-thermometer-outline\"\n}",
        "output": "json",
        "x": 580,
        "y": 400,
        "wires": [
            [
                "d432fe53e436c1a9"
            ]
        ]
    },
    {
        "id": "d432fe53e436c1a9",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/Wasteairtemperature/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 960,
        "y": 400,
        "wires": []
    },
    {
        "id": "c6cfa0edad34481b",
        "type": "comment",
        "z": "0b9ec44e8ca49f0e",
        "name": "MQTT configuration triggers",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "c2bc722b7f7a39e5",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Current supply fan speed RPM",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"state_class\": \"measurement\",\n    \"name\": \"Current supply fan speed\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"RPM\",\n    \"unique_id\": \"Current supply fan speed RPM\",\n    \"value_template\": \" {{value_json['Current supply fan speed RPM']}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:fan\"\n}",
        "output": "json",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "cdb1fedec81831a9"
            ]
        ]
    },
    {
        "id": "5d895464ddbd442c",
        "type": "comment",
        "z": "0b9ec44e8ca49f0e",
        "name": "Sensors fanspeed",
        "info": "",
        "x": 570,
        "y": 540,
        "wires": []
    },
    {
        "id": "cdb1fedec81831a9",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/CurrentsupplyfanspeedRPM/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1000,
        "y": 600,
        "wires": []
    },
    {
        "id": "f97aa502db3ca2ad",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Current exhaust fan speed RPM",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"state_class\": \"measurement\",\n    \"name\": \"Current exhaust fan speed\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"RPM\",\n    \"unique_id\": \"Current exhaust fan speed RPM\",\n    \"value_template\": \" {{value_json['Current exhaust fan speed RPM']}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:fan\"\n}",
        "output": "json",
        "x": 610,
        "y": 640,
        "wires": [
            [
                "603bda2761c7cd02"
            ]
        ]
    },
    {
        "id": "603bda2761c7cd02",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/CurrentexhaustfanspeedRPM/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "2bfd075f51ffe696",
        "type": "comment",
        "z": "0b9ec44e8ca49f0e",
        "name": "Control buttons",
        "info": "",
        "x": 560,
        "y": 760,
        "wires": []
    },
    {
        "id": "77ce239c57fd6aa3",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Boost",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n\n    \"command_topic\": \"ftx/Boostmode/set\",\n    \"payload_off\": false,\n    \"payload_on\": true,\n    \"state_topic\": \"ftx/Boostmode/state\",\n    \"name\": \"Boost mode\",\n    \"unique_id\": \"Boost mode\",\n    \"value_template\": \" {{value_json.value}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:fan-plus\"\n}",
        "output": "json",
        "x": 530,
        "y": 820,
        "wires": [
            [
                "47e462923a5a07cd"
            ]
        ]
    },
    {
        "id": "47e462923a5a07cd",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/switch/ftx/Boostmode/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 950,
        "y": 820,
        "wires": []
    },
    {
        "id": "dc6a6c1bcbbd93e9",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Electric heater",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n\n    \"command_topic\": \"ftx/Electricheater/set\",\n    \"payload_off\": 0,\n    \"payload_on\": 255,\n    \"state_topic\": \"ftx/Electricheater/state\",\n    \"name\": \"Electric heater\",\n    \"unique_id\": \"Electric heater\",\n    \"value_template\": \" {{value_json.value}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:heat-wave\"\n}",
        "output": "json",
        "x": 560,
        "y": 880,
        "wires": [
            [
                "04979e164ab30ae6"
            ]
        ]
    },
    {
        "id": "04979e164ab30ae6",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/switch/ftx/Electricheater/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 950,
        "y": 880,
        "wires": []
    },
    {
        "id": "92a451208d48ecba",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Away mode",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n\n    \"command_topic\": \"ftx/Awaymode/set\",\n    \"payload_off\": false,\n    \"payload_on\": true,\n    \"state_topic\": \"ftx/Awaymode/state\",\n    \"name\": \"Away mode\",\n    \"unique_id\": \"Away mode\",\n    \"value_template\": \" {{value_json.value}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:fan-minus\"\n}",
        "output": "json",
        "x": 550,
        "y": 940,
        "wires": [
            [
                "a352977c66db4693"
            ]
        ]
    },
    {
        "id": "a352977c66db4693",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/switch/ftx/Awaymode/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 950,
        "y": 940,
        "wires": []
    },
    {
        "id": "ad7a2f4b0a92063f",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Overpressure mode",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n\n    \"command_topic\": \"ftx/Overpressuremode/set\",\n    \"payload_off\": false,\n    \"payload_on\": true,\n    \"state_topic\": \"ftx/Overpressuremode/state\",\n    \"name\": \"Overpressure mode\",\n    \"unique_id\": \"Overpressure mode\",\n    \"value_template\": \" {{value_json.value}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:fire\"\n}",
        "output": "json",
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "1cee69132322b4a3"
            ]
        ]
    },
    {
        "id": "1cee69132322b4a3",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/switch/ftx/Overpressuremode/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 970,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a53b675a8d7ab757",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Summer night cooling",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n\n    \"command_topic\": \"ftx/SNC/set\",\n    \"payload_off\": 0,\n    \"payload_on\": 255,\n    \"state_topic\": \"ftx/SNC/state\",\n    \"name\": \"Summer night cooling\",\n    \"unique_id\": \"Summer night cooling\",\n    \"value_template\": \" {{value_json.value}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:thermometer-minus\"\n}",
        "output": "json",
        "x": 580,
        "y": 1080,
        "wires": [
            [
                "302104da15c25851"
            ]
        ]
    },
    {
        "id": "302104da15c25851",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/switch/ftx/SNC/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 930,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2604b28f05815f58",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Current heating power",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\"ftx_heru\"],\n        \"name\": \"FTX data\", \n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"state_class\": \"measurement\",\n    \"name\": \"Current heating power\",\n    \"state_topic\": \"ftx/data\",\n    \"unit_of_measurement\": \"%\",\n    \"unique_id\": \"Current heating power\",\n    \"value_template\": \" {{value_json['Current heating power']}} \",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:heating-coil\"\n}",
        "output": "json",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "c497addf2c4437f0"
            ]
        ]
    },
    {
        "id": "c497addf2c4437f0",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/sensor/ftx/Currentheatingpower/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 980,
        "y": 680,
        "wires": []
    },
    {
        "id": "71211143a9609d72",
        "type": "switch",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "b20115cd90061d1c",
                "66c4ee64886f8f71",
                "9d6e1c6cb385948f",
                "a9c302e663f32714",
                "c2bc722b7f7a39e5",
                "f97aa502db3ca2ad",
                "2604b28f05815f58",
                "77ce239c57fd6aa3",
                "dc6a6c1bcbbd93e9",
                "92a451208d48ecba",
                "ad7a2f4b0a92063f",
                "a53b675a8d7ab757",
                "12bd7febc01f0913"
            ]
        ]
    },
    {
        "id": "8a9fc416eb9c4e9b",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "d": true,
        "name": "Climate device",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\n            \"ftx_data_test\"\n        ],\n        \"name\": \"FTX data test\",\n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"state_class\": \"measurement\",\n    \"name\": \"Temperature setpoint 7\",\n    \"state_topic\": \"ftx/Temperaturesetpoint/state\",\n    \"unit_of_measurement\": \"°C\",\n    \"unique_id\": \"Temperature setpoint\",\n    \"platform\": \"mqtt\",\n    \"icon\": \"mdi:fan\",\n    \"temperature_command_topic\": \"ftx/Temperaturesetpoint/set\",\n    \"temperature_state_topic\": \"ftx/data\",\n    \"temperature_state_template\": \"{{ value_json['Temperature setpoint'] }}\",\n    \"temperature_unut\": \"C\",\n    \"temp_step\": 1,\n    \"action_template\": \"heating\",\n    \"modes\": [\n        \"fan_only\",\n        \"auto\",\n        \"off\",\n        \"heat\",\n        \"cool\"\n    ],\n    \"mode_state_topic\": \"ftx/data\",\n    \"mode_state_template\": \"fan_only\",\n    \"max_temp\": 30,\n    \"min_temp\": 15,\n    \"current_temperature_topic\": \"ftx/data\",\n    \"current_temperature_template\": \"{{ value_json['Supply air temperature'] }}\",\n    \"fan_mode_state_topic \": \"ftx/data\",\n    \"fan_mode_command_topic\": \"ftx/fan_mode/set\",\n    \"fan_mode_state_template\": \"medium\",\n    \"fan_modes\": [\n        \"low\",\n        \"medium\",\n        \"high\"\n    ]\n}",
        "output": "json",
        "x": 560,
        "y": 1280,
        "wires": [
            [
                "5bfec74fede6d71e"
            ]
        ]
    },
    {
        "id": "5bfec74fede6d71e",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/climate/ftx/Temperaturesetpoint/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 960,
        "y": 1280,
        "wires": []
    },
    {
        "id": "12bd7febc01f0913",
        "type": "template",
        "z": "0b9ec44e8ca49f0e",
        "name": "Temperature setpoint",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"device\": {\n        \"identifiers\": [\n            \"ftx_heru\"\n        ],\n        \"name\": \"FTX data\",\n        \"manufacturer\": \"Östberg\",\n        \"model\": \"Node red flow\",\n        \"sw_version\": \"1.0\"\n    },\n    \"name\": \"Temperature setpoint\",\n    \"unique_id\": \"Temperature setpoint\",\n    \"platform\": \"mqtt\",\n    \"command_topic\": \"ftx/Temperaturesetpoint/set\",\n    \"state_topic\": \"ftx/Temperaturesetpoint/state\",\n    \"value_template\": \" {{value_json.value}} \",\n    \"device_class\": \"temperature\",\n    \"min\": 15,\n    \"max\": 25,\n    \"mode\": \"slider\",\n    \"step\": 1,\n    \"unit_of_measurement\": \"°C\"\n}",
        "output": "json",
        "x": 580,
        "y": 1160,
        "wires": [
            [
                "5c52093ae2820b8b"
            ]
        ]
    },
    {
        "id": "5c52093ae2820b8b",
        "type": "mqtt out",
        "z": "0b9ec44e8ca49f0e",
        "name": "",
        "topic": "homeassistant/number/ftx/Temperaturesetpoint/config",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26516bc9a19c6fd2",
        "x": 980,
        "y": 1160,
        "wires": []
    }
]
